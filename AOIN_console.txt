World.wrldsiz = 150;      
GenePools[0].clear();
Populations[0].clear();      

Simulator.import("encoding_f1_best.gen", 2);  

GenePools[0][7].genotype = "X";  

for (var i = 0; i < 30; i++) {
    var geno = GenePools[0][i]; 
    var c = Populations[0].add(geno);
    var x = 20 + (i % 10) * 9;     
    var y = 30 + (i / 10) * 20;  
    c.locationSetBboxCenter(x, y, c.bboxCenter.z); 
}

function optimizeStability() {
    var bestFitness = 1e6;                    
    var bestCreature = null;   
    var bestGenotype = null; 

    for (var i = 0; i < 10; i++) {
        var c = Populations[0][i]; 
        var stabilityScore = evaluateStability(c); 

        if (stabilityScore < bestFitness) { 
            bestFitness = stabilityScore;
            bestCreature = c;   
            bestGenotype = c.genotype;
        }
    }
    Simulator.print("Najbardziej stabilny genotyp: " + bestGenotype);
}

function evaluateStability(creature) {
    var stability = 0;  
    stability += Math.abs(creature.position.x);  
    stability += Math.abs(creature.position.y);  
    stability -= Math.abs(creature.orientation.z); 
    return stability;   
}

optimizeStability();
